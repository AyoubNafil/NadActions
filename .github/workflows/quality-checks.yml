name: Code Quality Checks

on:
  workflow_call:

jobs:
  eslint:
    runs-on: ubuntu-latest
    name: "Run Eslint"
    steps:
      - uses: actions/checkout@v3
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
      - name: Run eslint
        run: |
          npm run lint

  pmd-apex:
    runs-on: ubuntu-latest
    name: "Run PMD for Apex"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
        #  PMD CLI does not allow for several paths to be scanned
        # because a dx project could use several packageDirectories
        # (each containing Apex classes), a file list is created
        # and pmd root directory is set to project directory
      - name: "Identify Files to Scan"
        run: |
          find ./ -name '*.cls' > apexClassesToScan.txt
      - name: "Show File Details"
        run: |
          cat apexClassesToScan.txt
      - name: "Show Rule Details"
        run: |
          cat ./.pmd/apex-ruleset.xml
      - name: "Use Apex Ruleset"
        run: |
          npx pmd \
             -R ./.pmd/apex-ruleset.xml \
             --file-list apexClassesToScan.txt \
             -f text

  pmd-sobject:
    runs-on: ubuntu-latest
    name: "Run PMD for sObjects"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
      - name: "Identify Files to Scan"
        run: |
          find ./ -name '*.object-meta.xml' -o -name '*.field-meta.xml' > sObjectsToScan.txt
      - name: "Show File Details"
        run: |
          cat sObjectsToScan.txt
      - name: "Show Rule Details"
        run: |
          cat ./.pmd/sobject-ruleset.xml
      - name: "Use sObject Ruleset"
        run: |
          npx pmd \
             -R ./.pmd/sobject-ruleset.xml \
             --file-list sObjectsToScan.txt \
             -f text

  pmd-flow:
    runs-on: ubuntu-latest
    name: "Run PMD for Flows"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
      - name: "Identify Files to Scan"
        run: |
          find ./ -name '*.flow-meta.xml' > flowsToScan.txt
      - name: "Show File Details"
        run: |
          cat flowsToScan.txt
      - name: "Show Rule Details"
        run: |
          cat ./.pmd/flow-ruleset.xml
      - name: "Use Flow Ruleset"
        run: |
          npx pmd \
             -R ./.pmd/flow-ruleset.xml \
             --file-list flowsToScan.txt \
             -f text

  pmd-misc:
    runs-on: ubuntu-latest
    name: "Run PMD for Miscellaneaous Metadata"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
      - name: "Identify Files to Scan"
        run: |
          find ./ -name '*.flexipage-meta.xml' > metadataToScan.txt
      - name: "Show File Details"
        run: |
          cat metadataToScan.txt
      - name: "Show Rule Details"
        run: |
          cat ./.pmd/misc-ruleset.xml
      - name: "Use Misc Ruleset"
        run: |
          npx pmd \
             -R ./.pmd/misc-ruleset.xml \
             --file-list metadataToScan.txt \
             -f text

  # commitlint is used to enforce commit message format
  # Since DevOps Center does its own commit msgs, this cannot be used
  # commitlint:
  #   runs-on: ubuntu-latest
  #   name: "Run Commitlint"
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: wagoid/commitlint-github-action@v5

  prettier-formatting:
    name: "Format with Prettier"
    needs: [eslint, pmd-apex, pmd-sobject, pmd-flow, pmd-misc]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: Szandor72/devops-center-actions/.github/install-tooling@main
      - uses: creyD/prettier_action@v4.3
        with:
          prettier_options: --write **/*.{cls,cmp,component,css,html,js,json,md,page,trigger,xml,yaml,yml} --no-error-on-unmatched-pattern
          same_commit: True
          only_changed: True
          prettier_plugins: "prettier-plugin-apex @prettier/plugin-xml"
